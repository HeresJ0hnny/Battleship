#BlueJ class context
comment0.target=BattleshipBoard
comment1.params=player
comment1.target=BattleshipBoard(int)
comment1.text=\r\n\ Creates\ a\ Battleship\ board\r\n\ @param\ player\ \ the\ player\ number\ of\ the\ board\r\n
comment2.params=hidden
comment2.target=int[][]\ getBoard(boolean)
comment2.text=\r\n\ Gives\ the\ array\ of\ the\ board.\r\n\ @param\ hidden\ \ whether\ the\ locations\ of\ ships\ should\ be\ hidden\ or\ not\r\n\ @return\ the\ board\ array\r\n
comment3.params=
comment3.target=int\ getPlayer()
comment3.text=\r\n\ Gives\ the\ player\ that\ is\ in\ control\ of\ the\ board.\r\n\ @return\ the\ player\ number\r\n
comment4.params=hidden
comment4.target=java.lang.String\ stringBoard(boolean)
comment4.text=\r\n\ Gives\ the\ board\ but\ as\ a\ string\r\n\ @return\ the\ string\ of\ the\ board\r\n
comment5.params=row\ column\ number
comment5.target=void\ set(int,\ int,\ int)
comment5.text=\r\n\ Sets\ the\ value\ of\ a\ spot\ on\ the\ board\ to\ a\ given\ value.\r\n\ @param\ row\ \ the\ row\ of\ the\ spot\r\n\ @param\ column\ the\ column\ of\ the\ spot\r\n\ @param\ number\ the\ number\ to\ set\ the\ value\ to\r\n
comment6.params=row\ col\ length\ change
comment6.target=boolean\ allEmpty(int,\ int,\ int,\ java.lang.String)
comment6.text=\r\n\ Determines\ whether\ a\ ship\ can\ be\ placed\ (if\ all\ the\ spaces\ a\ ship\ will\ occupy\ are\ empty)\r\n\ @param\ row\ \ the\ row\ of\ the\ first\ end\ of\ the\ ship\r\n\ @param\ column\ \ the\ column\ of\ the\ first\ end\ of\ the\ ship\r\n\ @param\ length\ \ the\ length\ of\ the\ ship\r\n\ @param\ change\ \ the\ direction\ the\ boat\ is\ placed\r\n\ @return\ whether\ all\ the\ spaces\ are\ empty\ or\ not\r\n
comment7.params=row\ column\ length
comment7.target=int[][]\ place(int,\ int,\ int)
comment7.text=\r\n\ Generates\ a\ list\ of\ coordinates\ to\ place\ the\ second\ end\ of\ the\ ship.\r\n\ @param\ row\ \ the\ row\ of\ the\ first\ end\ of\ the\ ship\r\n\ @param\ column\ \ the\ column\ of\ the\ first\ end\ of\ the\ ship\r\n\ @param\ length\ \ the\ length\ of\ the\ ship\r\n\ @return\ a\ list\ of\ all\ the\ possible\ endpoints\ of\ the\ ship\r\n
comment8.params=row\ column\ direction
comment8.target=int[]\ adjacent(int,\ int,\ java.lang.String)
comment8.text=\r\n\ Chooses\ a\ spot\ adjacent\ to\ the\ one\ provided\ that\ has\ not\ been\ shot\r\n\ @param\ row\ \ the\ row\ of\ the\ spot\r\n\ @param\ column\ \ the\ column\ of\ the\ spot\r\n\ @param\ direction\ \ the\ direction\ to\ look\ for\ the\ adjacent\ spot\r\n\ @return\ the\ coordinates\ for\ the\ adjacent\ spot\r\n
comment9.params=row\ column
comment9.target=void\ shoot(int,\ int)
comment9.text=\r\n\ Shoots\ at\ the\ given\ coordinates.\r\n\ @param\ row\ \ the\ row\ of\ the\ spot\ to\ shoot\ at\r\n\ @param\ column\ \ the\ column\ of\ the\ spot\ to\ shoot\ at\r\n
numComments=10
